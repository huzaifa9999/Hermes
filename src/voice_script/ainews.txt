

const API_KEY = 'a788a01ae8694006a7a72eea351b02c9';
let savedArticles = [];

// News by Source
intent('Give me the news from $(source* (.+))', (p) => {
    let NEWS_API_URL = 'https://newsapi.org/v2/top-headlines';
    
    if(p.source.value) {
         p.source.value=p.source.value.toLowerCase().split(" ").join("-");
    NEWS_API_URL = `${NEWS_API_URL}?sources=${p.source.value}&apiKey=${API_KEY}`
    }
    
  api.request(NEWS_API_URL, {headers: {"user-agent": 'user agent' }}, (error, response, body) => {
    const { totalResults, articles } = JSON.parse(body);
    
    if(totalResults == 0) {
        p.play('Sorry, please try searching for news from a different source');
        return;
    }
    
    savedArticles = articles;
    
    p.play({ command: 'newHeadlines', articles });
    p.play(`Here are (latest|recent) ${p.source.value}.`);

    p.play('Would you like me to read the headlines?');
       p.then(confirmation);

});
})

// latest news of country
intent('Give me the latest news', (p) => {
    let NEWS_API_URL = 'https://newsapi.org/v2/top-headlines';
    
    

    NEWS_API_URL = `${NEWS_API_URL}?country=us&apiKey=${API_KEY}`
    
    
  api.request(NEWS_API_URL, {headers: {"user-agent": 'user agent' }}, (error, response, body) => {
    const { totalResults, articles } = JSON.parse(body);
    
    if(totalResults == 0) {
        p.play('Sorry, please try searching for something else');
        return;
    }
    
    savedArticles = articles;
    
    p.play({ command: 'newHeadlines', articles });
    p.play(`Here are (latest|recent) news`);

    p.play('Would you like me to read the headlines?');
       p.then(confirmation);

});
})

//news by term
intent('What\'s up with $(term* (.+))', (p) => {
    let NEWS_API_URL = 'https://newsapi.org/v2/everything';
    
    if(p.term.value) {

    NEWS_API_URL = `${NEWS_API_URL}?q=${p.term.value}&apiKey=${API_KEY}`
    }
    
  api.request(NEWS_API_URL, {headers: {"user-agent": 'user agent' }}, (error, response, body) => {
    const { totalResults, articles } = JSON.parse(body);
    
    if(totalResults == 0) {
        p.play('Sorry, please try searching for something else');
        return;
    }
    
    savedArticles = articles;
    
    p.play({ command: 'newHeadlines', articles });
    p.play(`Here are (latest|recent) articles on ${p.term.value}.`);

    p.play('Would you like me to read the headlines?');
       p.then(confirmation);

});
})


//news by category
const CATEGORIES = ['business', 'entertainment', 'general', 'health', 'science', 'sports', 'technology'];
const CATEGORIES_INTENT = `${CATEGORIES.map((category) => `${category}~${category}`).join('|')}`;

intent(`(show|what is|tell me|what's|what are|what're|read) (the|) (recent|latest|) $(N news|headlines) (in|about|on|) $(C~ ${CATEGORIES_INTENT})`,
  `(read|show|get|bring me|give me) (the|) (recent|latest) $(C~ ${CATEGORIES_INTENT}) $(N news|headlines)`, (p) => {
    let NEWS_API_URL = `https://newsapi.org/v2/top-headlines?apiKey=${API_KEY}&country=us`;
    
    if(p.C.value) {
        NEWS_API_URL = `${NEWS_API_URL}&category=${p.C.value}`
    }
    
  api.request(NEWS_API_URL, {headers: {"user-agent": 'user agent' }}, (error, response, body) => {
    const { totalResults, articles } = JSON.parse(body);
    
    if(totalResults == 0) {
        p.play('Sorry, please try searching for something else');
        return;
    }
    
    savedArticles = articles;
    
    p.play({ command: 'newHeadlines', articles });
      if(p.C.value){
    p.play(`Here are (latest|recent) articles on ${p.C.value}.`);}
      else{ p.play(`here are the (latest|recent) news`)
 }

    p.play('Would you like me to read the headlines?');
      p.then(confirmation);
 
});
})
  

const confirmation = context(() => {
    intent('yes', async (p) => {
        for(let i = 0; i < savedArticles.length; i++){
            p.play({ command: 'highlight', article: savedArticles[i]});
            p.play(`${savedArticles[i].title}`);
        }
    })
    
    intent('no', (p) => {
        p.play('Sure, sounds good to me.')
    })
})

intent('open article number $(number* (.+))',(p) => {
   if (p.number.value) {
      
         p.play({command:'open',number: p.number.value, articles: savedArticles});
    }
    
})


intent('go back',(p)=>{
    p.play("sure going back");
    p.play({ command: 'newHeadlines', articles:[]}) 
})

